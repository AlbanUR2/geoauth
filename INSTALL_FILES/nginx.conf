# You may add here your
# server {
#	...
# }
# statements for each of your virtual hosts

upstream geoauth-upstream {
  server unix://var/www/app/rails/development/geoauth/tmp/sockets/unicorn.sock fail_timeout=0;
  # server localhost:3000;
}

server {

	listen   80; ## listen for ipv4
	listen   [::]:80 default ipv6only=on; ## listen for ipv6

	server_name  MY_SERVER_NAME;

	access_log  /var/log/nginx/georchestra.access.log;

	#location / {
	#	root   /var/www;
	#	index  index.html index.htm;
	#}

	location /geonetwork {
                client_max_body_size 640M;
                proxy_pass http://127.0.0.1:8080;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $host;
        }

        location /internal/geoserver {
		internal;
                client_max_body_size 640M;
      #
      # Use X-Authenticated-User header field from previous upstream location
      #
      set $x_username   $upstream_http_x_authenticated_user;

      rewrite /internal/(.*) /$1 break;
     
                proxy_pass http://127.0.0.1:8080;
		#
      		# Pass X-Authenticated-User header to underlying modules
      		#
      		proxy_set_header  X-Authenticated-User $x_username;

                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $host;
        }

        location /geovisu {
                proxy_pass http://127.0.0.1:8080;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $host;
        }

        location /geoworld {
                proxy_pass http://127.0.0.1:8080;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $host;
        }

	location ~ ^/(geonetwork|geoserver)/.*\.(gif|jpeg|jpg|png|css)$ {
      		rewrite ^(.*)$ /internal$1 last;
    	}

	location / {
      		# proxy_pass        http://127.0.0.1:3000;
      		proxy_pass        http://geoauth-upstream;
      		proxy_set_header  X-Real-IP  $remote_addr;
      		proxy_set_header Host $host;
      		# proxy_http_version 1.1;
      		#proxy_pass_header X-Authenticated-User;

    	}
	#error_page  404  /404.html;

	# redirect server error pages to the static page /50x.html
	#
	#error_page   500 502 503 504  /50x.html;
	#location = /50x.html {
	#	root   /var/www/nginx-default;
	#}

	# proxy the PHP scripts to Apache listening on 127.0.0.1:80
	#
	#location ~ \.php$ {
		#proxy_pass   http://127.0.0.1;
	#}

	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	#
	#location ~ \.php$ {
		#fastcgi_pass   127.0.0.1:9000;
		#fastcgi_index  index.php;
		#fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
		#includefastcgi_params;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
		#deny  all;
	#}
}


# another virtual host using mix of IP-, name-, and port-based configuration
#
#server {
#listen   8000;
#listen   somename:8080;
#server_name  somename  alias  another.alias;

#location / {
#root   html;
#index  index.html index.htm;
#}
#}


# HTTPS server
#
#server {
#listen   443;
#server_name  localhost;

#ssl  on;
#ssl_certificate  cert.pem;
#ssl_certificate_key  cert.key;

#ssl_session_timeout  5m;

#ssl_protocols  SSLv3 TLSv1;
#ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv3:+EXP;
#ssl_prefer_server_ciphers   on;

#location / {
#root   html;
#index  index.html index.htm;
#}
#}
